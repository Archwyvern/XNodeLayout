// <auto-generated />
namespace Archwyvern.Nxml
{
    internal class Overrides
    {
        public static System.Xml.Serialization.XmlAttributeOverrides Create()
        {
            System.Xml.Serialization.XmlAttributeOverrides attributeOverrides = new();

            attributeOverrides.Add(
                typeof(Godot.TextEdit.LineWrappingMode),
                new () {
                    XmlType = new() { TypeName = "Godot.TextEdit.LineWrappingMode" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.TextServer.AutowrapMode),
                new () {
                    XmlType = new() { TypeName = "Godot.TextServer.AutowrapMode" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.TextEdit.CaretTypeEnum),
                new () {
                    XmlType = new() { TypeName = "Godot.TextEdit.CaretTypeEnum" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.Control.TextDirection),
                new () {
                    XmlType = new() { TypeName = "Godot.Control.TextDirection" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.TextServer.StructuredTextParser),
                new () {
                    XmlType = new() { TypeName = "Godot.TextServer.StructuredTextParser" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.Control.LayoutDirectionEnum),
                new () {
                    XmlType = new() { TypeName = "Godot.Control.LayoutDirectionEnum" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.Control.GrowDirection),
                new () {
                    XmlType = new() { TypeName = "Godot.Control.GrowDirection" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.Control.SizeFlags),
                new () {
                    XmlType = new() { TypeName = "Godot.Control.SizeFlags" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.Control.FocusModeEnum),
                new () {
                    XmlType = new() { TypeName = "Godot.Control.FocusModeEnum" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.Control.MouseFilterEnum),
                new () {
                    XmlType = new() { TypeName = "Godot.Control.MouseFilterEnum" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.Control.CursorShape),
                new () {
                    XmlType = new() { TypeName = "Godot.Control.CursorShape" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.CanvasItem.ClipChildrenMode),
                new () {
                    XmlType = new() { TypeName = "Godot.CanvasItem.ClipChildrenMode" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.CanvasItem.TextureFilterEnum),
                new () {
                    XmlType = new() { TypeName = "Godot.CanvasItem.TextureFilterEnum" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.CanvasItem.TextureRepeatEnum),
                new () {
                    XmlType = new() { TypeName = "Godot.CanvasItem.TextureRepeatEnum" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.Node.ProcessModeEnum),
                new () {
                    XmlType = new() { TypeName = "Godot.Node.ProcessModeEnum" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.Node.ProcessThreadGroupEnum),
                new () {
                    XmlType = new() { TypeName = "Godot.Node.ProcessThreadGroupEnum" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.Node.ProcessThreadMessagesEnum),
                new () {
                    XmlType = new() { TypeName = "Godot.Node.ProcessThreadMessagesEnum" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.TextServer.VisibleCharactersBehavior),
                new () {
                    XmlType = new() { TypeName = "Godot.TextServer.VisibleCharactersBehavior" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.Tree.SelectModeEnum),
                new () {
                    XmlType = new() { TypeName = "Godot.Tree.SelectModeEnum" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.AspectRatioContainer.StretchModeEnum),
                new () {
                    XmlType = new() { TypeName = "Godot.AspectRatioContainer.StretchModeEnum" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.AspectRatioContainer.AlignmentMode),
                new () {
                    XmlType = new() { TypeName = "Godot.AspectRatioContainer.AlignmentMode" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.BoxContainer.AlignmentMode),
                new () {
                    XmlType = new() { TypeName = "Godot.BoxContainer.AlignmentMode" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.HorizontalAlignment),
                new () {
                    XmlType = new() { TypeName = "Godot.HorizontalAlignment" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.TextServer.OverrunBehavior),
                new () {
                    XmlType = new() { TypeName = "Godot.TextServer.OverrunBehavior" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.VerticalAlignment),
                new () {
                    XmlType = new() { TypeName = "Godot.VerticalAlignment" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.BaseButton.ActionModeEnum),
                new () {
                    XmlType = new() { TypeName = "Godot.BaseButton.ActionModeEnum" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.MouseButtonMask),
                new () {
                    XmlType = new() { TypeName = "Godot.MouseButtonMask" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.ColorPicker.ColorModeType),
                new () {
                    XmlType = new() { TypeName = "Godot.ColorPicker.ColorModeType" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.ColorPicker.PickerShapeType),
                new () {
                    XmlType = new() { TypeName = "Godot.ColorPicker.PickerShapeType" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.FlowContainer.AlignmentMode),
                new () {
                    XmlType = new() { TypeName = "Godot.FlowContainer.AlignmentMode" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.GraphEdit.PanningSchemeEnum),
                new () {
                    XmlType = new() { TypeName = "Godot.GraphEdit.PanningSchemeEnum" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.GraphNode.OverlayEnum),
                new () {
                    XmlType = new() { TypeName = "Godot.GraphNode.OverlayEnum" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.SplitContainer.DraggerVisibilityEnum),
                new () {
                    XmlType = new() { TypeName = "Godot.SplitContainer.DraggerVisibilityEnum" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.ItemList.SelectModeEnum),
                new () {
                    XmlType = new() { TypeName = "Godot.ItemList.SelectModeEnum" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.ItemList.IconModeEnum),
                new () {
                    XmlType = new() { TypeName = "Godot.ItemList.IconModeEnum" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.TextServer.JustificationFlag),
                new () {
                    XmlType = new() { TypeName = "Godot.TextServer.JustificationFlag" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.LineEdit.VirtualKeyboardTypeEnum),
                new () {
                    XmlType = new() { TypeName = "Godot.LineEdit.VirtualKeyboardTypeEnum" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.LinkButton.UnderlineMode),
                new () {
                    XmlType = new() { TypeName = "Godot.LinkButton.UnderlineMode" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.NinePatchRect.AxisStretchMode),
                new () {
                    XmlType = new() { TypeName = "Godot.NinePatchRect.AxisStretchMode" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.ScrollContainer.ScrollMode),
                new () {
                    XmlType = new() { TypeName = "Godot.ScrollContainer.ScrollMode" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.TabBar.AlignmentMode),
                new () {
                    XmlType = new() { TypeName = "Godot.TabBar.AlignmentMode" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.TabBar.CloseButtonDisplayPolicy),
                new () {
                    XmlType = new() { TypeName = "Godot.TabBar.CloseButtonDisplayPolicy" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.TextureButton.StretchModeEnum),
                new () {
                    XmlType = new() { TypeName = "Godot.TextureButton.StretchModeEnum" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.TextureRect.ExpandModeEnum),
                new () {
                    XmlType = new() { TypeName = "Godot.TextureRect.ExpandModeEnum" }
                }
            );
            attributeOverrides.Add(
                typeof(Godot.TextureRect.StretchModeEnum),
                new () {
                    XmlType = new() { TypeName = "Godot.TextureRect.StretchModeEnum" }
                }
            );

            return attributeOverrides;
        }
    }
}

// <auto-generated />
namespace Archwyvern.Nxml.Tags
{
    [System.Xml.Serialization.XmlRoot(ElementName = "AudioStreamOggVorbis", Namespace = "http://archwyvern.com/xsd/nxml")]
    public class AudioStreamOggVorbisTag : Archwyvern.Nxml.BaseTag, Archwyvern.Nxml.IResourceTag
    {
#nullable enable
        public static class ElementProperty
        {
            [System.Xml.Serialization.XmlType(TypeName = "AudioStreamOggVorbis.ElementProperty.PacketSequence")] public class PacketSequence
            {
                [System.Xml.Serialization.XmlElement(ElementName = "OggPacketSequence", Type = typeof(OggPacketSequenceTag))]
                public Archwyvern.Nxml.BaseTag? Value;
            }

        }

        [System.Xml.Serialization.XmlIgnore] public BaseTag? PacketSequence => _Surrogate_Element_PacketSequence?.Value;
        [System.Xml.Serialization.XmlElement(ElementName = "AudioStreamOggVorbis.PacketSequence")] public AudioStreamOggVorbisTag.ElementProperty.PacketSequence? _Surrogate_Element_PacketSequence;

        // Simple Attributes
        [System.Xml.Serialization.XmlAttribute(AttributeName = "Bpm")] public string _Surrogate_Attribute_Bpm {
            get => Bpm != null ? ((System.Double)Bpm).ToString() : "";
            set { if (value != "") { Bpm = System.Double.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "AudioStreamOggVorbis.Bpm")] public string _Surrogate_Element_Bpm {
            get => Bpm != null ? ((System.Double)Bpm).ToString() : "";
            set { if (value != "") { Bpm = System.Double.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Double? Bpm { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "BeatCount")] public string _Surrogate_Attribute_BeatCount {
            get => BeatCount != null ? ((System.Int32)BeatCount).ToString() : "";
            set { if (value != "") { BeatCount = System.Int32.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "AudioStreamOggVorbis.BeatCount")] public string _Surrogate_Element_BeatCount {
            get => BeatCount != null ? ((System.Int32)BeatCount).ToString() : "";
            set { if (value != "") { BeatCount = System.Int32.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Int32? BeatCount { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "BarBeats")] public string _Surrogate_Attribute_BarBeats {
            get => BarBeats != null ? ((System.Int32)BarBeats).ToString() : "";
            set { if (value != "") { BarBeats = System.Int32.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "AudioStreamOggVorbis.BarBeats")] public string _Surrogate_Element_BarBeats {
            get => BarBeats != null ? ((System.Int32)BarBeats).ToString() : "";
            set { if (value != "") { BarBeats = System.Int32.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Int32? BarBeats { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "Loop")] public string _Surrogate_Attribute_Loop {
            get => Loop != null ? ((System.Boolean)Loop).ToString() : "";
            set { if (value != "") { Loop = System.Boolean.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "AudioStreamOggVorbis.Loop")] public string _Surrogate_Element_Loop {
            get => Loop != null ? ((System.Boolean)Loop).ToString() : "";
            set { if (value != "") { Loop = System.Boolean.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Boolean? Loop { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "LoopOffset")] public string _Surrogate_Attribute_LoopOffset {
            get => LoopOffset != null ? ((System.Double)LoopOffset).ToString() : "";
            set { if (value != "") { LoopOffset = System.Double.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "AudioStreamOggVorbis.LoopOffset")] public string _Surrogate_Element_LoopOffset {
            get => LoopOffset != null ? ((System.Double)LoopOffset).ToString() : "";
            set { if (value != "") { LoopOffset = System.Double.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Double? LoopOffset { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "ResourceLocalToScene")] public string _Surrogate_Attribute_ResourceLocalToScene {
            get => ResourceLocalToScene != null ? ((System.Boolean)ResourceLocalToScene).ToString() : "";
            set { if (value != "") { ResourceLocalToScene = System.Boolean.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "AudioStreamOggVorbis.ResourceLocalToScene")] public string _Surrogate_Element_ResourceLocalToScene {
            get => ResourceLocalToScene != null ? ((System.Boolean)ResourceLocalToScene).ToString() : "";
            set { if (value != "") { ResourceLocalToScene = System.Boolean.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Boolean? ResourceLocalToScene { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "ResourcePath")] public string _Surrogate_Attribute_ResourcePath {
            get => ResourcePath != null ? ((System.String)ResourcePath).ToString() : "";
            set { if (value != "") { ResourcePath = value; } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "AudioStreamOggVorbis.ResourcePath")] public string _Surrogate_Element_ResourcePath {
            get => ResourcePath != null ? ((System.String)ResourcePath).ToString() : "";
            set { if (value != "") { ResourcePath = value; } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.String? ResourcePath { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "ResourceName")] public string _Surrogate_Attribute_ResourceName {
            get => ResourceName != null ? ((System.String)ResourceName).ToString() : "";
            set { if (value != "") { ResourceName = value; } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "AudioStreamOggVorbis.ResourceName")] public string _Surrogate_Element_ResourceName {
            get => ResourceName != null ? ((System.String)ResourceName).ToString() : "";
            set { if (value != "") { ResourceName = value; } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.String? ResourceName { get; set; }
#nullable disable

        // Overloaded Attributes

        internal override Godot.GodotObject CreateObject(Godot.GodotObject alt = null)
        {
            if (alt != null && alt is not Godot.AudioStreamOggVorbis) return alt;
            var obj = (Godot.AudioStreamOggVorbis)alt ?? new Godot.AudioStreamOggVorbis();

            // Attributes
            if (Bpm != null) obj.Bpm = (System.Double)Bpm;
            if (BeatCount != null) obj.BeatCount = (System.Int32)BeatCount;
            if (BarBeats != null) obj.BarBeats = (System.Int32)BarBeats;
            if (Loop != null) obj.Loop = (System.Boolean)Loop;
            if (LoopOffset != null) obj.LoopOffset = (System.Double)LoopOffset;
            if (ResourceLocalToScene != null) obj.ResourceLocalToScene = (System.Boolean)ResourceLocalToScene;
            if (ResourcePath != null) obj.ResourcePath = (System.String)ResourcePath;
            if (ResourceName != null) obj.ResourceName = (System.String)ResourceName;
            // Overloaded Attributes
            // Elements
            if (PacketSequence != null) {
                if (((IResourceTag)PacketSequence).ResourcePath != null) {
                    obj.PacketSequence = (Godot.OggPacketSequence)PacketSequence.Generate(Godot.GD.Load<Godot.OggPacketSequence>(((IResourceTag)PacketSequence).ResourcePath));
                } else {
                    obj.PacketSequence = (Godot.OggPacketSequence)PacketSequence.Generate();
                }
            }

            return obj;
        }
    }
}

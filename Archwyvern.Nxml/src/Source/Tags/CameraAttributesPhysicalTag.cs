// <auto-generated />
namespace Archwyvern.Nxml.Tags
{
    [System.Xml.Serialization.XmlRoot(ElementName = "CameraAttributesPhysical", Namespace = "http://archwyvern.com/xsd/nxml")]
    public class CameraAttributesPhysicalTag : Archwyvern.Nxml.BaseTag, Archwyvern.Nxml.IResourceTag
    {
#nullable enable
        public static class ElementProperty
        {
        }

        // Simple Attributes
        [System.Xml.Serialization.XmlAttribute(AttributeName = "FrustumFocusDistance")] public string _Surrogate_Attribute_FrustumFocusDistance {
            get => FrustumFocusDistance != null ? ((System.Single)FrustumFocusDistance).ToString() : "";
            set { if (value != "") { FrustumFocusDistance = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "CameraAttributesPhysical.FrustumFocusDistance")] public string _Surrogate_Element_FrustumFocusDistance {
            get => FrustumFocusDistance != null ? ((System.Single)FrustumFocusDistance).ToString() : "";
            set { if (value != "") { FrustumFocusDistance = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Single? FrustumFocusDistance { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "FrustumFocalLength")] public string _Surrogate_Attribute_FrustumFocalLength {
            get => FrustumFocalLength != null ? ((System.Single)FrustumFocalLength).ToString() : "";
            set { if (value != "") { FrustumFocalLength = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "CameraAttributesPhysical.FrustumFocalLength")] public string _Surrogate_Element_FrustumFocalLength {
            get => FrustumFocalLength != null ? ((System.Single)FrustumFocalLength).ToString() : "";
            set { if (value != "") { FrustumFocalLength = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Single? FrustumFocalLength { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "FrustumNear")] public string _Surrogate_Attribute_FrustumNear {
            get => FrustumNear != null ? ((System.Single)FrustumNear).ToString() : "";
            set { if (value != "") { FrustumNear = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "CameraAttributesPhysical.FrustumNear")] public string _Surrogate_Element_FrustumNear {
            get => FrustumNear != null ? ((System.Single)FrustumNear).ToString() : "";
            set { if (value != "") { FrustumNear = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Single? FrustumNear { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "FrustumFar")] public string _Surrogate_Attribute_FrustumFar {
            get => FrustumFar != null ? ((System.Single)FrustumFar).ToString() : "";
            set { if (value != "") { FrustumFar = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "CameraAttributesPhysical.FrustumFar")] public string _Surrogate_Element_FrustumFar {
            get => FrustumFar != null ? ((System.Single)FrustumFar).ToString() : "";
            set { if (value != "") { FrustumFar = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Single? FrustumFar { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "ExposureAperture")] public string _Surrogate_Attribute_ExposureAperture {
            get => ExposureAperture != null ? ((System.Single)ExposureAperture).ToString() : "";
            set { if (value != "") { ExposureAperture = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "CameraAttributesPhysical.ExposureAperture")] public string _Surrogate_Element_ExposureAperture {
            get => ExposureAperture != null ? ((System.Single)ExposureAperture).ToString() : "";
            set { if (value != "") { ExposureAperture = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Single? ExposureAperture { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "ExposureShutterSpeed")] public string _Surrogate_Attribute_ExposureShutterSpeed {
            get => ExposureShutterSpeed != null ? ((System.Single)ExposureShutterSpeed).ToString() : "";
            set { if (value != "") { ExposureShutterSpeed = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "CameraAttributesPhysical.ExposureShutterSpeed")] public string _Surrogate_Element_ExposureShutterSpeed {
            get => ExposureShutterSpeed != null ? ((System.Single)ExposureShutterSpeed).ToString() : "";
            set { if (value != "") { ExposureShutterSpeed = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Single? ExposureShutterSpeed { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "AutoExposureMinExposureValue")] public string _Surrogate_Attribute_AutoExposureMinExposureValue {
            get => AutoExposureMinExposureValue != null ? ((System.Single)AutoExposureMinExposureValue).ToString() : "";
            set { if (value != "") { AutoExposureMinExposureValue = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "CameraAttributesPhysical.AutoExposureMinExposureValue")] public string _Surrogate_Element_AutoExposureMinExposureValue {
            get => AutoExposureMinExposureValue != null ? ((System.Single)AutoExposureMinExposureValue).ToString() : "";
            set { if (value != "") { AutoExposureMinExposureValue = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Single? AutoExposureMinExposureValue { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "AutoExposureMaxExposureValue")] public string _Surrogate_Attribute_AutoExposureMaxExposureValue {
            get => AutoExposureMaxExposureValue != null ? ((System.Single)AutoExposureMaxExposureValue).ToString() : "";
            set { if (value != "") { AutoExposureMaxExposureValue = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "CameraAttributesPhysical.AutoExposureMaxExposureValue")] public string _Surrogate_Element_AutoExposureMaxExposureValue {
            get => AutoExposureMaxExposureValue != null ? ((System.Single)AutoExposureMaxExposureValue).ToString() : "";
            set { if (value != "") { AutoExposureMaxExposureValue = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Single? AutoExposureMaxExposureValue { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "ExposureSensitivity")] public string _Surrogate_Attribute_ExposureSensitivity {
            get => ExposureSensitivity != null ? ((System.Single)ExposureSensitivity).ToString() : "";
            set { if (value != "") { ExposureSensitivity = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "CameraAttributesPhysical.ExposureSensitivity")] public string _Surrogate_Element_ExposureSensitivity {
            get => ExposureSensitivity != null ? ((System.Single)ExposureSensitivity).ToString() : "";
            set { if (value != "") { ExposureSensitivity = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Single? ExposureSensitivity { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "ExposureMultiplier")] public string _Surrogate_Attribute_ExposureMultiplier {
            get => ExposureMultiplier != null ? ((System.Single)ExposureMultiplier).ToString() : "";
            set { if (value != "") { ExposureMultiplier = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "CameraAttributesPhysical.ExposureMultiplier")] public string _Surrogate_Element_ExposureMultiplier {
            get => ExposureMultiplier != null ? ((System.Single)ExposureMultiplier).ToString() : "";
            set { if (value != "") { ExposureMultiplier = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Single? ExposureMultiplier { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "AutoExposureEnabled")] public string _Surrogate_Attribute_AutoExposureEnabled {
            get => AutoExposureEnabled != null ? ((System.Boolean)AutoExposureEnabled).ToString() : "";
            set { if (value != "") { AutoExposureEnabled = System.Boolean.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "CameraAttributesPhysical.AutoExposureEnabled")] public string _Surrogate_Element_AutoExposureEnabled {
            get => AutoExposureEnabled != null ? ((System.Boolean)AutoExposureEnabled).ToString() : "";
            set { if (value != "") { AutoExposureEnabled = System.Boolean.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Boolean? AutoExposureEnabled { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "AutoExposureScale")] public string _Surrogate_Attribute_AutoExposureScale {
            get => AutoExposureScale != null ? ((System.Single)AutoExposureScale).ToString() : "";
            set { if (value != "") { AutoExposureScale = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "CameraAttributesPhysical.AutoExposureScale")] public string _Surrogate_Element_AutoExposureScale {
            get => AutoExposureScale != null ? ((System.Single)AutoExposureScale).ToString() : "";
            set { if (value != "") { AutoExposureScale = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Single? AutoExposureScale { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "AutoExposureSpeed")] public string _Surrogate_Attribute_AutoExposureSpeed {
            get => AutoExposureSpeed != null ? ((System.Single)AutoExposureSpeed).ToString() : "";
            set { if (value != "") { AutoExposureSpeed = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "CameraAttributesPhysical.AutoExposureSpeed")] public string _Surrogate_Element_AutoExposureSpeed {
            get => AutoExposureSpeed != null ? ((System.Single)AutoExposureSpeed).ToString() : "";
            set { if (value != "") { AutoExposureSpeed = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Single? AutoExposureSpeed { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "ResourceLocalToScene")] public string _Surrogate_Attribute_ResourceLocalToScene {
            get => ResourceLocalToScene != null ? ((System.Boolean)ResourceLocalToScene).ToString() : "";
            set { if (value != "") { ResourceLocalToScene = System.Boolean.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "CameraAttributesPhysical.ResourceLocalToScene")] public string _Surrogate_Element_ResourceLocalToScene {
            get => ResourceLocalToScene != null ? ((System.Boolean)ResourceLocalToScene).ToString() : "";
            set { if (value != "") { ResourceLocalToScene = System.Boolean.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Boolean? ResourceLocalToScene { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "ResourcePath")] public string _Surrogate_Attribute_ResourcePath {
            get => ResourcePath != null ? ((System.String)ResourcePath).ToString() : "";
            set { if (value != "") { ResourcePath = value; } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "CameraAttributesPhysical.ResourcePath")] public string _Surrogate_Element_ResourcePath {
            get => ResourcePath != null ? ((System.String)ResourcePath).ToString() : "";
            set { if (value != "") { ResourcePath = value; } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.String? ResourcePath { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "ResourceName")] public string _Surrogate_Attribute_ResourceName {
            get => ResourceName != null ? ((System.String)ResourceName).ToString() : "";
            set { if (value != "") { ResourceName = value; } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "CameraAttributesPhysical.ResourceName")] public string _Surrogate_Element_ResourceName {
            get => ResourceName != null ? ((System.String)ResourceName).ToString() : "";
            set { if (value != "") { ResourceName = value; } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.String? ResourceName { get; set; }
#nullable disable

        // Overloaded Attributes

        internal override Godot.GodotObject CreateObject(Godot.GodotObject alt = null)
        {
            if (alt != null && alt is not Godot.CameraAttributesPhysical) return alt;
            var obj = (Godot.CameraAttributesPhysical)alt ?? new Godot.CameraAttributesPhysical();

            // Attributes
            if (FrustumFocusDistance != null) obj.FrustumFocusDistance = (System.Single)FrustumFocusDistance;
            if (FrustumFocalLength != null) obj.FrustumFocalLength = (System.Single)FrustumFocalLength;
            if (FrustumNear != null) obj.FrustumNear = (System.Single)FrustumNear;
            if (FrustumFar != null) obj.FrustumFar = (System.Single)FrustumFar;
            if (ExposureAperture != null) obj.ExposureAperture = (System.Single)ExposureAperture;
            if (ExposureShutterSpeed != null) obj.ExposureShutterSpeed = (System.Single)ExposureShutterSpeed;
            if (AutoExposureMinExposureValue != null) obj.AutoExposureMinExposureValue = (System.Single)AutoExposureMinExposureValue;
            if (AutoExposureMaxExposureValue != null) obj.AutoExposureMaxExposureValue = (System.Single)AutoExposureMaxExposureValue;
            if (ExposureSensitivity != null) obj.ExposureSensitivity = (System.Single)ExposureSensitivity;
            if (ExposureMultiplier != null) obj.ExposureMultiplier = (System.Single)ExposureMultiplier;
            if (AutoExposureEnabled != null) obj.AutoExposureEnabled = (System.Boolean)AutoExposureEnabled;
            if (AutoExposureScale != null) obj.AutoExposureScale = (System.Single)AutoExposureScale;
            if (AutoExposureSpeed != null) obj.AutoExposureSpeed = (System.Single)AutoExposureSpeed;
            if (ResourceLocalToScene != null) obj.ResourceLocalToScene = (System.Boolean)ResourceLocalToScene;
            if (ResourcePath != null) obj.ResourcePath = (System.String)ResourcePath;
            if (ResourceName != null) obj.ResourceName = (System.String)ResourceName;
            // Overloaded Attributes
            // Elements

            return obj;
        }
    }
}

// <auto-generated />
namespace Archwyvern.Nxml.Tags
{
    [System.Xml.Serialization.XmlRoot(ElementName = "MeshTexture", Namespace = "http://archwyvern.com/xsd/nxml")]
    public class MeshTextureTag : Archwyvern.Nxml.BaseTag, Archwyvern.Nxml.IResourceTag
    {
#nullable enable
        public static class ElementProperty
        {
            [System.Xml.Serialization.XmlType(TypeName = "MeshTexture.ElementProperty.Mesh")] public class Mesh
            {
                [System.Xml.Serialization.XmlElement(ElementName = "ArrayMesh", Type = typeof(ArrayMeshTag))]
                [System.Xml.Serialization.XmlElement(ElementName = "BoxMesh", Type = typeof(BoxMeshTag))]
                [System.Xml.Serialization.XmlElement(ElementName = "CapsuleMesh", Type = typeof(CapsuleMeshTag))]
                [System.Xml.Serialization.XmlElement(ElementName = "CylinderMesh", Type = typeof(CylinderMeshTag))]
                [System.Xml.Serialization.XmlElement(ElementName = "ImmediateMesh", Type = typeof(ImmediateMeshTag))]
                [System.Xml.Serialization.XmlElement(ElementName = "Mesh", Type = typeof(MeshTag))]
                [System.Xml.Serialization.XmlElement(ElementName = "PlaceholderMesh", Type = typeof(PlaceholderMeshTag))]
                [System.Xml.Serialization.XmlElement(ElementName = "PlaneMesh", Type = typeof(PlaneMeshTag))]
                [System.Xml.Serialization.XmlElement(ElementName = "PointMesh", Type = typeof(PointMeshTag))]
                [System.Xml.Serialization.XmlElement(ElementName = "PrimitiveMesh", Type = typeof(PrimitiveMeshTag))]
                [System.Xml.Serialization.XmlElement(ElementName = "PrismMesh", Type = typeof(PrismMeshTag))]
                [System.Xml.Serialization.XmlElement(ElementName = "QuadMesh", Type = typeof(QuadMeshTag))]
                [System.Xml.Serialization.XmlElement(ElementName = "RibbonTrailMesh", Type = typeof(RibbonTrailMeshTag))]
                [System.Xml.Serialization.XmlElement(ElementName = "SphereMesh", Type = typeof(SphereMeshTag))]
                [System.Xml.Serialization.XmlElement(ElementName = "TextMesh", Type = typeof(TextMeshTag))]
                [System.Xml.Serialization.XmlElement(ElementName = "TorusMesh", Type = typeof(TorusMeshTag))]
                [System.Xml.Serialization.XmlElement(ElementName = "TubeTrailMesh", Type = typeof(TubeTrailMeshTag))]
                public Archwyvern.Nxml.BaseTag? Value;
            }

            [System.Xml.Serialization.XmlType(TypeName = "MeshTexture.ElementProperty.BaseTexture")] public class BaseTexture
            {
                [System.Xml.Serialization.XmlElement(ElementName = "AnimatedTexture", Type = typeof(AnimatedTextureTag))]
                [System.Xml.Serialization.XmlElement(ElementName = "AtlasTexture", Type = typeof(AtlasTextureTag))]
                [System.Xml.Serialization.XmlElement(ElementName = "CameraTexture", Type = typeof(CameraTextureTag))]
                [System.Xml.Serialization.XmlElement(ElementName = "CanvasTexture", Type = typeof(CanvasTextureTag))]
                [System.Xml.Serialization.XmlElement(ElementName = "CompressedTexture2D", Type = typeof(CompressedTexture2DTag))]
                [System.Xml.Serialization.XmlElement(ElementName = "CurveTexture", Type = typeof(CurveTextureTag))]
                [System.Xml.Serialization.XmlElement(ElementName = "CurveXyzTexture", Type = typeof(CurveXyzTextureTag))]
                [System.Xml.Serialization.XmlElement(ElementName = "GradientTexture1D", Type = typeof(GradientTexture1DTag))]
                [System.Xml.Serialization.XmlElement(ElementName = "GradientTexture2D", Type = typeof(GradientTexture2DTag))]
                [System.Xml.Serialization.XmlElement(ElementName = "ImageTexture", Type = typeof(ImageTextureTag))]
                [System.Xml.Serialization.XmlElement(ElementName = "MeshTexture", Type = typeof(MeshTextureTag))]
                [System.Xml.Serialization.XmlElement(ElementName = "NoiseTexture2D", Type = typeof(NoiseTexture2DTag))]
                [System.Xml.Serialization.XmlElement(ElementName = "PlaceholderTexture2D", Type = typeof(PlaceholderTexture2DTag))]
                [System.Xml.Serialization.XmlElement(ElementName = "PortableCompressedTexture2D", Type = typeof(PortableCompressedTexture2DTag))]
                [System.Xml.Serialization.XmlElement(ElementName = "Texture2D", Type = typeof(Texture2DTag))]
                [System.Xml.Serialization.XmlElement(ElementName = "ViewportTexture", Type = typeof(ViewportTextureTag))]
                public Archwyvern.Nxml.BaseTag? Value;
            }

        }

        [System.Xml.Serialization.XmlIgnore] public BaseTag? Mesh => _Surrogate_Element_Mesh?.Value;
        [System.Xml.Serialization.XmlElement(ElementName = "MeshTexture.Mesh")] public MeshTextureTag.ElementProperty.Mesh? _Surrogate_Element_Mesh;

        [System.Xml.Serialization.XmlIgnore] public BaseTag? BaseTexture => _Surrogate_Element_BaseTexture?.Value;
        [System.Xml.Serialization.XmlElement(ElementName = "MeshTexture.BaseTexture")] public MeshTextureTag.ElementProperty.BaseTexture? _Surrogate_Element_BaseTexture;

        // Simple Attributes
        [System.Xml.Serialization.XmlAttribute(AttributeName = "ResourceLocalToScene")] public string _Surrogate_Attribute_ResourceLocalToScene {
            get => ResourceLocalToScene != null ? ((System.Boolean)ResourceLocalToScene).ToString() : "";
            set { if (value != "") { ResourceLocalToScene = System.Boolean.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "MeshTexture.ResourceLocalToScene")] public string _Surrogate_Element_ResourceLocalToScene {
            get => ResourceLocalToScene != null ? ((System.Boolean)ResourceLocalToScene).ToString() : "";
            set { if (value != "") { ResourceLocalToScene = System.Boolean.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Boolean? ResourceLocalToScene { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "ResourcePath")] public string _Surrogate_Attribute_ResourcePath {
            get => ResourcePath != null ? ((System.String)ResourcePath).ToString() : "";
            set { if (value != "") { ResourcePath = value; } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "MeshTexture.ResourcePath")] public string _Surrogate_Element_ResourcePath {
            get => ResourcePath != null ? ((System.String)ResourcePath).ToString() : "";
            set { if (value != "") { ResourcePath = value; } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.String? ResourcePath { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "ResourceName")] public string _Surrogate_Attribute_ResourceName {
            get => ResourceName != null ? ((System.String)ResourceName).ToString() : "";
            set { if (value != "") { ResourceName = value; } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "MeshTexture.ResourceName")] public string _Surrogate_Element_ResourceName {
            get => ResourceName != null ? ((System.String)ResourceName).ToString() : "";
            set { if (value != "") { ResourceName = value; } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.String? ResourceName { get; set; }
#nullable disable

        // Overloaded Attributes
        [System.Xml.Serialization.XmlAttribute(AttributeName = "ImageSize")] public string _Surrogate_ImageSize {
            get => ImageSize != null ? ((Archwyvern.Nxml.Translators.Vector2)ImageSize).ToString() : "";
            set => ImageSize = value != "" ? value : null;
        }
        [System.Xml.Serialization.XmlIgnore] public Archwyvern.Nxml.Translators.Vector2? ImageSize;

        internal override Godot.GodotObject CreateObject(Godot.GodotObject alt = null)
        {
            if (alt != null && alt is not Godot.MeshTexture) return alt;
            var obj = (Godot.MeshTexture)alt ?? new Godot.MeshTexture();

            // Attributes
            if (ResourceLocalToScene != null) obj.ResourceLocalToScene = (System.Boolean)ResourceLocalToScene;
            if (ResourcePath != null) obj.ResourcePath = (System.String)ResourcePath;
            if (ResourceName != null) obj.ResourceName = (System.String)ResourceName;
            // Overloaded Attributes
            if (ImageSize != null) obj.ImageSize = (Archwyvern.Nxml.Translators.Vector2)ImageSize;
            // Elements
            if (Mesh != null) {
                if (((IResourceTag)Mesh).ResourcePath != null) {
                    obj.Mesh = (Godot.Mesh)Mesh.Generate(Godot.GD.Load<Godot.Mesh>(((IResourceTag)Mesh).ResourcePath));
                } else {
                    obj.Mesh = (Godot.Mesh)Mesh.Generate();
                }
            }
            if (BaseTexture != null) {
                if (((IResourceTag)BaseTexture).ResourcePath != null) {
                    obj.BaseTexture = (Godot.Texture2D)BaseTexture.Generate(Godot.GD.Load<Godot.Texture2D>(((IResourceTag)BaseTexture).ResourcePath));
                } else {
                    obj.BaseTexture = (Godot.Texture2D)BaseTexture.Generate();
                }
            }

            return obj;
        }
    }
}

// <auto-generated />
namespace Archwyvern.Nxml.Tags
{
    [System.Xml.Serialization.XmlRoot(ElementName = "Curve", Namespace = "http://archwyvern.com/xsd/nxml")]
    public class CurveTag : Archwyvern.Nxml.BaseTag, Archwyvern.Nxml.IResourceTag
    {
#nullable enable
        public static class ElementProperty
        {
        }

        // Simple Attributes
        [System.Xml.Serialization.XmlAttribute(AttributeName = "MinValue")] public string _Surrogate_Attribute_MinValue {
            get => MinValue != null ? ((System.Single)MinValue).ToString() : "";
            set { if (value != "") { MinValue = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "Curve.MinValue")] public string _Surrogate_Element_MinValue {
            get => MinValue != null ? ((System.Single)MinValue).ToString() : "";
            set { if (value != "") { MinValue = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Single? MinValue { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "MaxValue")] public string _Surrogate_Attribute_MaxValue {
            get => MaxValue != null ? ((System.Single)MaxValue).ToString() : "";
            set { if (value != "") { MaxValue = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "Curve.MaxValue")] public string _Surrogate_Element_MaxValue {
            get => MaxValue != null ? ((System.Single)MaxValue).ToString() : "";
            set { if (value != "") { MaxValue = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Single? MaxValue { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "BakeResolution")] public string _Surrogate_Attribute_BakeResolution {
            get => BakeResolution != null ? ((System.Int32)BakeResolution).ToString() : "";
            set { if (value != "") { BakeResolution = System.Int32.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "Curve.BakeResolution")] public string _Surrogate_Element_BakeResolution {
            get => BakeResolution != null ? ((System.Int32)BakeResolution).ToString() : "";
            set { if (value != "") { BakeResolution = System.Int32.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Int32? BakeResolution { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "PointCount")] public string _Surrogate_Attribute_PointCount {
            get => PointCount != null ? ((System.Int32)PointCount).ToString() : "";
            set { if (value != "") { PointCount = System.Int32.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "Curve.PointCount")] public string _Surrogate_Element_PointCount {
            get => PointCount != null ? ((System.Int32)PointCount).ToString() : "";
            set { if (value != "") { PointCount = System.Int32.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Int32? PointCount { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "ResourceLocalToScene")] public string _Surrogate_Attribute_ResourceLocalToScene {
            get => ResourceLocalToScene != null ? ((System.Boolean)ResourceLocalToScene).ToString() : "";
            set { if (value != "") { ResourceLocalToScene = System.Boolean.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "Curve.ResourceLocalToScene")] public string _Surrogate_Element_ResourceLocalToScene {
            get => ResourceLocalToScene != null ? ((System.Boolean)ResourceLocalToScene).ToString() : "";
            set { if (value != "") { ResourceLocalToScene = System.Boolean.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Boolean? ResourceLocalToScene { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "ResourcePath")] public string _Surrogate_Attribute_ResourcePath {
            get => ResourcePath != null ? ((System.String)ResourcePath).ToString() : "";
            set { if (value != "") { ResourcePath = value; } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "Curve.ResourcePath")] public string _Surrogate_Element_ResourcePath {
            get => ResourcePath != null ? ((System.String)ResourcePath).ToString() : "";
            set { if (value != "") { ResourcePath = value; } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.String? ResourcePath { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "ResourceName")] public string _Surrogate_Attribute_ResourceName {
            get => ResourceName != null ? ((System.String)ResourceName).ToString() : "";
            set { if (value != "") { ResourceName = value; } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "Curve.ResourceName")] public string _Surrogate_Element_ResourceName {
            get => ResourceName != null ? ((System.String)ResourceName).ToString() : "";
            set { if (value != "") { ResourceName = value; } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.String? ResourceName { get; set; }
#nullable disable

        // Overloaded Attributes

        internal override Godot.GodotObject CreateObject(Godot.GodotObject alt = null)
        {
            if (alt != null && alt is not Godot.Curve) return alt;
            var obj = (Godot.Curve)alt ?? new Godot.Curve();

            // Attributes
            if (MinValue != null) obj.MinValue = (System.Single)MinValue;
            if (MaxValue != null) obj.MaxValue = (System.Single)MaxValue;
            if (BakeResolution != null) obj.BakeResolution = (System.Int32)BakeResolution;
            if (PointCount != null) obj.PointCount = (System.Int32)PointCount;
            if (ResourceLocalToScene != null) obj.ResourceLocalToScene = (System.Boolean)ResourceLocalToScene;
            if (ResourcePath != null) obj.ResourcePath = (System.String)ResourcePath;
            if (ResourceName != null) obj.ResourceName = (System.String)ResourceName;
            // Overloaded Attributes
            // Elements

            return obj;
        }
    }
}

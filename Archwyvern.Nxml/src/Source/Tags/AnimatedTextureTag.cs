// <auto-generated />
namespace Archwyvern.Nxml.Tags
{
    [System.Xml.Serialization.XmlRoot(ElementName = "AnimatedTexture", Namespace = "http://archwyvern.com/xsd/nxml")]
    public class AnimatedTextureTag : Archwyvern.Nxml.BaseTag, Archwyvern.Nxml.IResourceTag
    {
#nullable enable
        public static class ElementProperty
        {
        }

        // Simple Attributes
        [System.Xml.Serialization.XmlAttribute(AttributeName = "Frames")] public string _Surrogate_Attribute_Frames {
            get => Frames != null ? ((System.Int32)Frames).ToString() : "";
            set { if (value != "") { Frames = System.Int32.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "AnimatedTexture.Frames")] public string _Surrogate_Element_Frames {
            get => Frames != null ? ((System.Int32)Frames).ToString() : "";
            set { if (value != "") { Frames = System.Int32.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Int32? Frames { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "CurrentFrame")] public string _Surrogate_Attribute_CurrentFrame {
            get => CurrentFrame != null ? ((System.Int32)CurrentFrame).ToString() : "";
            set { if (value != "") { CurrentFrame = System.Int32.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "AnimatedTexture.CurrentFrame")] public string _Surrogate_Element_CurrentFrame {
            get => CurrentFrame != null ? ((System.Int32)CurrentFrame).ToString() : "";
            set { if (value != "") { CurrentFrame = System.Int32.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Int32? CurrentFrame { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "Pause")] public string _Surrogate_Attribute_Pause {
            get => Pause != null ? ((System.Boolean)Pause).ToString() : "";
            set { if (value != "") { Pause = System.Boolean.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "AnimatedTexture.Pause")] public string _Surrogate_Element_Pause {
            get => Pause != null ? ((System.Boolean)Pause).ToString() : "";
            set { if (value != "") { Pause = System.Boolean.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Boolean? Pause { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "OneShot")] public string _Surrogate_Attribute_OneShot {
            get => OneShot != null ? ((System.Boolean)OneShot).ToString() : "";
            set { if (value != "") { OneShot = System.Boolean.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "AnimatedTexture.OneShot")] public string _Surrogate_Element_OneShot {
            get => OneShot != null ? ((System.Boolean)OneShot).ToString() : "";
            set { if (value != "") { OneShot = System.Boolean.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Boolean? OneShot { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "SpeedScale")] public string _Surrogate_Attribute_SpeedScale {
            get => SpeedScale != null ? ((System.Single)SpeedScale).ToString() : "";
            set { if (value != "") { SpeedScale = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "AnimatedTexture.SpeedScale")] public string _Surrogate_Element_SpeedScale {
            get => SpeedScale != null ? ((System.Single)SpeedScale).ToString() : "";
            set { if (value != "") { SpeedScale = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Single? SpeedScale { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "ResourceLocalToScene")] public string _Surrogate_Attribute_ResourceLocalToScene {
            get => ResourceLocalToScene != null ? ((System.Boolean)ResourceLocalToScene).ToString() : "";
            set { if (value != "") { ResourceLocalToScene = System.Boolean.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "AnimatedTexture.ResourceLocalToScene")] public string _Surrogate_Element_ResourceLocalToScene {
            get => ResourceLocalToScene != null ? ((System.Boolean)ResourceLocalToScene).ToString() : "";
            set { if (value != "") { ResourceLocalToScene = System.Boolean.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Boolean? ResourceLocalToScene { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "ResourcePath")] public string _Surrogate_Attribute_ResourcePath {
            get => ResourcePath != null ? ((System.String)ResourcePath).ToString() : "";
            set { if (value != "") { ResourcePath = value; } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "AnimatedTexture.ResourcePath")] public string _Surrogate_Element_ResourcePath {
            get => ResourcePath != null ? ((System.String)ResourcePath).ToString() : "";
            set { if (value != "") { ResourcePath = value; } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.String? ResourcePath { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "ResourceName")] public string _Surrogate_Attribute_ResourceName {
            get => ResourceName != null ? ((System.String)ResourceName).ToString() : "";
            set { if (value != "") { ResourceName = value; } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "AnimatedTexture.ResourceName")] public string _Surrogate_Element_ResourceName {
            get => ResourceName != null ? ((System.String)ResourceName).ToString() : "";
            set { if (value != "") { ResourceName = value; } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.String? ResourceName { get; set; }
#nullable disable

        // Overloaded Attributes

        internal override Godot.GodotObject CreateObject(Godot.GodotObject alt = null)
        {
            if (alt != null && alt is not Godot.AnimatedTexture) return alt;
            var obj = (Godot.AnimatedTexture)alt ?? new Godot.AnimatedTexture();

            // Attributes
            if (Frames != null) obj.Frames = (System.Int32)Frames;
            if (CurrentFrame != null) obj.CurrentFrame = (System.Int32)CurrentFrame;
            if (Pause != null) obj.Pause = (System.Boolean)Pause;
            if (OneShot != null) obj.OneShot = (System.Boolean)OneShot;
            if (SpeedScale != null) obj.SpeedScale = (System.Single)SpeedScale;
            if (ResourceLocalToScene != null) obj.ResourceLocalToScene = (System.Boolean)ResourceLocalToScene;
            if (ResourcePath != null) obj.ResourcePath = (System.String)ResourcePath;
            if (ResourceName != null) obj.ResourceName = (System.String)ResourceName;
            // Overloaded Attributes
            // Elements

            return obj;
        }
    }
}

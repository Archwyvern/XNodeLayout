// <auto-generated />
namespace Archwyvern.Nxml.Tags
{
    [System.Xml.Serialization.XmlRoot(ElementName = "CameraAttributesPractical", Namespace = "http://archwyvern.com/xsd/nxml")]
    public class CameraAttributesPracticalTag : Archwyvern.Nxml.BaseTag, Archwyvern.Nxml.IResourceTag
    {
#nullable enable
        public static class ElementProperty
        {
        }

        // Simple Attributes
        [System.Xml.Serialization.XmlAttribute(AttributeName = "DofBlurFarEnabled")] public string _Surrogate_Attribute_DofBlurFarEnabled {
            get => DofBlurFarEnabled != null ? ((System.Boolean)DofBlurFarEnabled).ToString() : "";
            set { if (value != "") { DofBlurFarEnabled = System.Boolean.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "CameraAttributesPractical.DofBlurFarEnabled")] public string _Surrogate_Element_DofBlurFarEnabled {
            get => DofBlurFarEnabled != null ? ((System.Boolean)DofBlurFarEnabled).ToString() : "";
            set { if (value != "") { DofBlurFarEnabled = System.Boolean.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Boolean? DofBlurFarEnabled { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "DofBlurFarDistance")] public string _Surrogate_Attribute_DofBlurFarDistance {
            get => DofBlurFarDistance != null ? ((System.Single)DofBlurFarDistance).ToString() : "";
            set { if (value != "") { DofBlurFarDistance = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "CameraAttributesPractical.DofBlurFarDistance")] public string _Surrogate_Element_DofBlurFarDistance {
            get => DofBlurFarDistance != null ? ((System.Single)DofBlurFarDistance).ToString() : "";
            set { if (value != "") { DofBlurFarDistance = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Single? DofBlurFarDistance { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "DofBlurFarTransition")] public string _Surrogate_Attribute_DofBlurFarTransition {
            get => DofBlurFarTransition != null ? ((System.Single)DofBlurFarTransition).ToString() : "";
            set { if (value != "") { DofBlurFarTransition = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "CameraAttributesPractical.DofBlurFarTransition")] public string _Surrogate_Element_DofBlurFarTransition {
            get => DofBlurFarTransition != null ? ((System.Single)DofBlurFarTransition).ToString() : "";
            set { if (value != "") { DofBlurFarTransition = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Single? DofBlurFarTransition { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "DofBlurNearEnabled")] public string _Surrogate_Attribute_DofBlurNearEnabled {
            get => DofBlurNearEnabled != null ? ((System.Boolean)DofBlurNearEnabled).ToString() : "";
            set { if (value != "") { DofBlurNearEnabled = System.Boolean.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "CameraAttributesPractical.DofBlurNearEnabled")] public string _Surrogate_Element_DofBlurNearEnabled {
            get => DofBlurNearEnabled != null ? ((System.Boolean)DofBlurNearEnabled).ToString() : "";
            set { if (value != "") { DofBlurNearEnabled = System.Boolean.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Boolean? DofBlurNearEnabled { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "DofBlurNearDistance")] public string _Surrogate_Attribute_DofBlurNearDistance {
            get => DofBlurNearDistance != null ? ((System.Single)DofBlurNearDistance).ToString() : "";
            set { if (value != "") { DofBlurNearDistance = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "CameraAttributesPractical.DofBlurNearDistance")] public string _Surrogate_Element_DofBlurNearDistance {
            get => DofBlurNearDistance != null ? ((System.Single)DofBlurNearDistance).ToString() : "";
            set { if (value != "") { DofBlurNearDistance = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Single? DofBlurNearDistance { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "DofBlurNearTransition")] public string _Surrogate_Attribute_DofBlurNearTransition {
            get => DofBlurNearTransition != null ? ((System.Single)DofBlurNearTransition).ToString() : "";
            set { if (value != "") { DofBlurNearTransition = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "CameraAttributesPractical.DofBlurNearTransition")] public string _Surrogate_Element_DofBlurNearTransition {
            get => DofBlurNearTransition != null ? ((System.Single)DofBlurNearTransition).ToString() : "";
            set { if (value != "") { DofBlurNearTransition = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Single? DofBlurNearTransition { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "DofBlurAmount")] public string _Surrogate_Attribute_DofBlurAmount {
            get => DofBlurAmount != null ? ((System.Single)DofBlurAmount).ToString() : "";
            set { if (value != "") { DofBlurAmount = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "CameraAttributesPractical.DofBlurAmount")] public string _Surrogate_Element_DofBlurAmount {
            get => DofBlurAmount != null ? ((System.Single)DofBlurAmount).ToString() : "";
            set { if (value != "") { DofBlurAmount = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Single? DofBlurAmount { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "AutoExposureMinSensitivity")] public string _Surrogate_Attribute_AutoExposureMinSensitivity {
            get => AutoExposureMinSensitivity != null ? ((System.Single)AutoExposureMinSensitivity).ToString() : "";
            set { if (value != "") { AutoExposureMinSensitivity = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "CameraAttributesPractical.AutoExposureMinSensitivity")] public string _Surrogate_Element_AutoExposureMinSensitivity {
            get => AutoExposureMinSensitivity != null ? ((System.Single)AutoExposureMinSensitivity).ToString() : "";
            set { if (value != "") { AutoExposureMinSensitivity = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Single? AutoExposureMinSensitivity { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "AutoExposureMaxSensitivity")] public string _Surrogate_Attribute_AutoExposureMaxSensitivity {
            get => AutoExposureMaxSensitivity != null ? ((System.Single)AutoExposureMaxSensitivity).ToString() : "";
            set { if (value != "") { AutoExposureMaxSensitivity = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "CameraAttributesPractical.AutoExposureMaxSensitivity")] public string _Surrogate_Element_AutoExposureMaxSensitivity {
            get => AutoExposureMaxSensitivity != null ? ((System.Single)AutoExposureMaxSensitivity).ToString() : "";
            set { if (value != "") { AutoExposureMaxSensitivity = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Single? AutoExposureMaxSensitivity { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "ExposureSensitivity")] public string _Surrogate_Attribute_ExposureSensitivity {
            get => ExposureSensitivity != null ? ((System.Single)ExposureSensitivity).ToString() : "";
            set { if (value != "") { ExposureSensitivity = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "CameraAttributesPractical.ExposureSensitivity")] public string _Surrogate_Element_ExposureSensitivity {
            get => ExposureSensitivity != null ? ((System.Single)ExposureSensitivity).ToString() : "";
            set { if (value != "") { ExposureSensitivity = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Single? ExposureSensitivity { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "ExposureMultiplier")] public string _Surrogate_Attribute_ExposureMultiplier {
            get => ExposureMultiplier != null ? ((System.Single)ExposureMultiplier).ToString() : "";
            set { if (value != "") { ExposureMultiplier = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "CameraAttributesPractical.ExposureMultiplier")] public string _Surrogate_Element_ExposureMultiplier {
            get => ExposureMultiplier != null ? ((System.Single)ExposureMultiplier).ToString() : "";
            set { if (value != "") { ExposureMultiplier = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Single? ExposureMultiplier { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "AutoExposureEnabled")] public string _Surrogate_Attribute_AutoExposureEnabled {
            get => AutoExposureEnabled != null ? ((System.Boolean)AutoExposureEnabled).ToString() : "";
            set { if (value != "") { AutoExposureEnabled = System.Boolean.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "CameraAttributesPractical.AutoExposureEnabled")] public string _Surrogate_Element_AutoExposureEnabled {
            get => AutoExposureEnabled != null ? ((System.Boolean)AutoExposureEnabled).ToString() : "";
            set { if (value != "") { AutoExposureEnabled = System.Boolean.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Boolean? AutoExposureEnabled { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "AutoExposureScale")] public string _Surrogate_Attribute_AutoExposureScale {
            get => AutoExposureScale != null ? ((System.Single)AutoExposureScale).ToString() : "";
            set { if (value != "") { AutoExposureScale = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "CameraAttributesPractical.AutoExposureScale")] public string _Surrogate_Element_AutoExposureScale {
            get => AutoExposureScale != null ? ((System.Single)AutoExposureScale).ToString() : "";
            set { if (value != "") { AutoExposureScale = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Single? AutoExposureScale { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "AutoExposureSpeed")] public string _Surrogate_Attribute_AutoExposureSpeed {
            get => AutoExposureSpeed != null ? ((System.Single)AutoExposureSpeed).ToString() : "";
            set { if (value != "") { AutoExposureSpeed = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "CameraAttributesPractical.AutoExposureSpeed")] public string _Surrogate_Element_AutoExposureSpeed {
            get => AutoExposureSpeed != null ? ((System.Single)AutoExposureSpeed).ToString() : "";
            set { if (value != "") { AutoExposureSpeed = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Single? AutoExposureSpeed { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "ResourceLocalToScene")] public string _Surrogate_Attribute_ResourceLocalToScene {
            get => ResourceLocalToScene != null ? ((System.Boolean)ResourceLocalToScene).ToString() : "";
            set { if (value != "") { ResourceLocalToScene = System.Boolean.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "CameraAttributesPractical.ResourceLocalToScene")] public string _Surrogate_Element_ResourceLocalToScene {
            get => ResourceLocalToScene != null ? ((System.Boolean)ResourceLocalToScene).ToString() : "";
            set { if (value != "") { ResourceLocalToScene = System.Boolean.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Boolean? ResourceLocalToScene { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "ResourcePath")] public string _Surrogate_Attribute_ResourcePath {
            get => ResourcePath != null ? ((System.String)ResourcePath).ToString() : "";
            set { if (value != "") { ResourcePath = value; } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "CameraAttributesPractical.ResourcePath")] public string _Surrogate_Element_ResourcePath {
            get => ResourcePath != null ? ((System.String)ResourcePath).ToString() : "";
            set { if (value != "") { ResourcePath = value; } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.String? ResourcePath { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "ResourceName")] public string _Surrogate_Attribute_ResourceName {
            get => ResourceName != null ? ((System.String)ResourceName).ToString() : "";
            set { if (value != "") { ResourceName = value; } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "CameraAttributesPractical.ResourceName")] public string _Surrogate_Element_ResourceName {
            get => ResourceName != null ? ((System.String)ResourceName).ToString() : "";
            set { if (value != "") { ResourceName = value; } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.String? ResourceName { get; set; }
#nullable disable

        // Overloaded Attributes

        internal override Godot.GodotObject CreateObject(Godot.GodotObject alt = null)
        {
            if (alt != null && alt is not Godot.CameraAttributesPractical) return alt;
            var obj = (Godot.CameraAttributesPractical)alt ?? new Godot.CameraAttributesPractical();

            // Attributes
            if (DofBlurFarEnabled != null) obj.DofBlurFarEnabled = (System.Boolean)DofBlurFarEnabled;
            if (DofBlurFarDistance != null) obj.DofBlurFarDistance = (System.Single)DofBlurFarDistance;
            if (DofBlurFarTransition != null) obj.DofBlurFarTransition = (System.Single)DofBlurFarTransition;
            if (DofBlurNearEnabled != null) obj.DofBlurNearEnabled = (System.Boolean)DofBlurNearEnabled;
            if (DofBlurNearDistance != null) obj.DofBlurNearDistance = (System.Single)DofBlurNearDistance;
            if (DofBlurNearTransition != null) obj.DofBlurNearTransition = (System.Single)DofBlurNearTransition;
            if (DofBlurAmount != null) obj.DofBlurAmount = (System.Single)DofBlurAmount;
            if (AutoExposureMinSensitivity != null) obj.AutoExposureMinSensitivity = (System.Single)AutoExposureMinSensitivity;
            if (AutoExposureMaxSensitivity != null) obj.AutoExposureMaxSensitivity = (System.Single)AutoExposureMaxSensitivity;
            if (ExposureSensitivity != null) obj.ExposureSensitivity = (System.Single)ExposureSensitivity;
            if (ExposureMultiplier != null) obj.ExposureMultiplier = (System.Single)ExposureMultiplier;
            if (AutoExposureEnabled != null) obj.AutoExposureEnabled = (System.Boolean)AutoExposureEnabled;
            if (AutoExposureScale != null) obj.AutoExposureScale = (System.Single)AutoExposureScale;
            if (AutoExposureSpeed != null) obj.AutoExposureSpeed = (System.Single)AutoExposureSpeed;
            if (ResourceLocalToScene != null) obj.ResourceLocalToScene = (System.Boolean)ResourceLocalToScene;
            if (ResourcePath != null) obj.ResourcePath = (System.String)ResourcePath;
            if (ResourceName != null) obj.ResourceName = (System.String)ResourceName;
            // Overloaded Attributes
            // Elements

            return obj;
        }
    }
}

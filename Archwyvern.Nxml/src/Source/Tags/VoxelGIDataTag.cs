// <auto-generated />
namespace Archwyvern.Nxml.Tags
{
    [System.Xml.Serialization.XmlRoot(ElementName = "VoxelGIData", Namespace = "http://archwyvern.com/xsd/nxml")]
    public class VoxelGIDataTag : Archwyvern.Nxml.BaseTag, Archwyvern.Nxml.IResourceTag
    {
#nullable enable
        public static class ElementProperty
        {
        }

        // Simple Attributes
        [System.Xml.Serialization.XmlAttribute(AttributeName = "DynamicRange")] public string _Surrogate_Attribute_DynamicRange {
            get => DynamicRange != null ? ((System.Single)DynamicRange).ToString() : "";
            set { if (value != "") { DynamicRange = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "VoxelGIData.DynamicRange")] public string _Surrogate_Element_DynamicRange {
            get => DynamicRange != null ? ((System.Single)DynamicRange).ToString() : "";
            set { if (value != "") { DynamicRange = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Single? DynamicRange { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "Energy")] public string _Surrogate_Attribute_Energy {
            get => Energy != null ? ((System.Single)Energy).ToString() : "";
            set { if (value != "") { Energy = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "VoxelGIData.Energy")] public string _Surrogate_Element_Energy {
            get => Energy != null ? ((System.Single)Energy).ToString() : "";
            set { if (value != "") { Energy = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Single? Energy { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "Bias")] public string _Surrogate_Attribute_Bias {
            get => Bias != null ? ((System.Single)Bias).ToString() : "";
            set { if (value != "") { Bias = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "VoxelGIData.Bias")] public string _Surrogate_Element_Bias {
            get => Bias != null ? ((System.Single)Bias).ToString() : "";
            set { if (value != "") { Bias = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Single? Bias { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "NormalBias")] public string _Surrogate_Attribute_NormalBias {
            get => NormalBias != null ? ((System.Single)NormalBias).ToString() : "";
            set { if (value != "") { NormalBias = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "VoxelGIData.NormalBias")] public string _Surrogate_Element_NormalBias {
            get => NormalBias != null ? ((System.Single)NormalBias).ToString() : "";
            set { if (value != "") { NormalBias = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Single? NormalBias { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "Propagation")] public string _Surrogate_Attribute_Propagation {
            get => Propagation != null ? ((System.Single)Propagation).ToString() : "";
            set { if (value != "") { Propagation = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "VoxelGIData.Propagation")] public string _Surrogate_Element_Propagation {
            get => Propagation != null ? ((System.Single)Propagation).ToString() : "";
            set { if (value != "") { Propagation = System.Single.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Single? Propagation { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "UseTwoBounces")] public string _Surrogate_Attribute_UseTwoBounces {
            get => UseTwoBounces != null ? ((System.Boolean)UseTwoBounces).ToString() : "";
            set { if (value != "") { UseTwoBounces = System.Boolean.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "VoxelGIData.UseTwoBounces")] public string _Surrogate_Element_UseTwoBounces {
            get => UseTwoBounces != null ? ((System.Boolean)UseTwoBounces).ToString() : "";
            set { if (value != "") { UseTwoBounces = System.Boolean.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Boolean? UseTwoBounces { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "Interior")] public string _Surrogate_Attribute_Interior {
            get => Interior != null ? ((System.Boolean)Interior).ToString() : "";
            set { if (value != "") { Interior = System.Boolean.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "VoxelGIData.Interior")] public string _Surrogate_Element_Interior {
            get => Interior != null ? ((System.Boolean)Interior).ToString() : "";
            set { if (value != "") { Interior = System.Boolean.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Boolean? Interior { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "ResourceLocalToScene")] public string _Surrogate_Attribute_ResourceLocalToScene {
            get => ResourceLocalToScene != null ? ((System.Boolean)ResourceLocalToScene).ToString() : "";
            set { if (value != "") { ResourceLocalToScene = System.Boolean.Parse(value); } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "VoxelGIData.ResourceLocalToScene")] public string _Surrogate_Element_ResourceLocalToScene {
            get => ResourceLocalToScene != null ? ((System.Boolean)ResourceLocalToScene).ToString() : "";
            set { if (value != "") { ResourceLocalToScene = System.Boolean.Parse(value); } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.Boolean? ResourceLocalToScene { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "ResourcePath")] public string _Surrogate_Attribute_ResourcePath {
            get => ResourcePath != null ? ((System.String)ResourcePath).ToString() : "";
            set { if (value != "") { ResourcePath = value; } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "VoxelGIData.ResourcePath")] public string _Surrogate_Element_ResourcePath {
            get => ResourcePath != null ? ((System.String)ResourcePath).ToString() : "";
            set { if (value != "") { ResourcePath = value; } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.String? ResourcePath { get; set; }
        [System.Xml.Serialization.XmlAttribute(AttributeName = "ResourceName")] public string _Surrogate_Attribute_ResourceName {
            get => ResourceName != null ? ((System.String)ResourceName).ToString() : "";
            set { if (value != "") { ResourceName = value; } }
        }
        [System.Xml.Serialization.XmlElement(ElementName = "VoxelGIData.ResourceName")] public string _Surrogate_Element_ResourceName {
            get => ResourceName != null ? ((System.String)ResourceName).ToString() : "";
            set { if (value != "") { ResourceName = value; } }
        }
        [System.Xml.Serialization.XmlIgnore] public System.String? ResourceName { get; set; }
#nullable disable

        // Overloaded Attributes

        internal override Godot.GodotObject CreateObject(Godot.GodotObject alt = null)
        {
            if (alt != null && alt is not Godot.VoxelGIData) return alt;
            var obj = (Godot.VoxelGIData)alt ?? new Godot.VoxelGIData();

            // Attributes
            if (DynamicRange != null) obj.DynamicRange = (System.Single)DynamicRange;
            if (Energy != null) obj.Energy = (System.Single)Energy;
            if (Bias != null) obj.Bias = (System.Single)Bias;
            if (NormalBias != null) obj.NormalBias = (System.Single)NormalBias;
            if (Propagation != null) obj.Propagation = (System.Single)Propagation;
            if (UseTwoBounces != null) obj.UseTwoBounces = (System.Boolean)UseTwoBounces;
            if (Interior != null) obj.Interior = (System.Boolean)Interior;
            if (ResourceLocalToScene != null) obj.ResourceLocalToScene = (System.Boolean)ResourceLocalToScene;
            if (ResourcePath != null) obj.ResourcePath = (System.String)ResourcePath;
            if (ResourceName != null) obj.ResourceName = (System.String)ResourceName;
            // Overloaded Attributes
            // Elements

            return obj;
        }
    }
}
